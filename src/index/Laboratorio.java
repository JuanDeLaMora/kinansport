package index;

import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import poi.ExportToWord;
import poi.Paciente;

/**
 * @author delamora
 */
public class Laboratorio extends javax.swing.JDialog {

    /**
     * Creates new form Laboratorio
     */
    public Laboratorio(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tpDatosPersonales = new javax.swing.JTabbedPane();
        panelDatosPersonales = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbActividadFisica = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        txtPeso = new javax.swing.JTextField();
        txtEstatura = new javax.swing.JTextField();
        cbMasculino = new javax.swing.JCheckBox();
        cbFemenino = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTriceps = new javax.swing.JTextField();
        txtSubescapular = new javax.swing.JTextField();
        txtBiceps = new javax.swing.JTextField();
        txtPectoral = new javax.swing.JTextField();
        txtAxilar = new javax.swing.JTextField();
        txtCrestaIliaca = new javax.swing.JTextField();
        txtSupraespinal = new javax.swing.JTextField();
        txtAbdominal = new javax.swing.JTextField();
        txtMusloFrontal = new javax.swing.JTextField();
        txtPantorrillaMedial = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtBrazoRelajado = new javax.swing.JTextField();
        txtBrazoContraido = new javax.swing.JTextField();
        txtCintura = new javax.swing.JTextField();
        txtAbdomen = new javax.swing.JTextField();
        txtCadera = new javax.swing.JTextField();
        txtPantorrilla = new javax.swing.JTextField();
        txtHumero = new javax.swing.JTextField();
        txtEstiloideo = new javax.swing.JTextField();
        txtFemur = new javax.swing.JTextField();
        panelMediciones = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        txtIMC = new javax.swing.JTextField();
        txtCC = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        txtEndomorfia = new javax.swing.JTextField();
        txtMesomorfia = new javax.swing.JTextField();
        txtEctomorfia = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        txtClasificacion = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        txtEndomorfiaRCD = new javax.swing.JTextField();
        txtMesomorfiaRCD = new javax.swing.JTextField();
        txtEctomorfiaRCD = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        btnDurninWomersley = new javax.swing.JToggleButton();
        btnThorlandJohnson = new javax.swing.JToggleButton();
        btnSloanBurtBlyth = new javax.swing.JToggleButton();
        btnSloan = new javax.swing.JToggleButton();
        btnPolloclkLaughridge = new javax.swing.JToggleButton();
        btnKatchMcArdle = new javax.swing.JToggleButton();
        btnLewisHaskell = new javax.swing.JToggleButton();
        btnJacksonPollock = new javax.swing.JToggleButton();
        btnJacksonAndPollock = new javax.swing.JToggleButton();
        btnWilmoreBehnke = new javax.swing.JToggleButton();
        btnWithersCraig = new javax.swing.JToggleButton();
        jLabel41 = new javax.swing.JLabel();
        txtComplexion = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtICC = new javax.swing.JTextField();
        panelComposicionCorporal = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        txtMasaMagra = new javax.swing.JTextField();
        txtKgGrasa = new javax.swing.JTextField();
        txtKgMusculo = new javax.swing.JTextField();
        txtKgOseo = new javax.swing.JTextField();
        txtKgResidual = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        txtPorcentajeGrasaReal = new javax.swing.JTextField();
        txtPorcentajeMusculoReal = new javax.swing.JTextField();
        txtPorcentajeOseoReal = new javax.swing.JTextField();
        txtPorcentajeResidualReal = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        txtPorcentajeGrasaRCD = new javax.swing.JTextField();
        txtPorcentajeMusculoRCD = new javax.swing.JTextField();
        txtPorcentajeOseoRCD = new javax.swing.JTextField();
        txtPorcentajeResidualRCD = new javax.swing.JTextField();
        btnExportarWord = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1200, 600));
        setPreferredSize(new java.awt.Dimension(1220, 600));

        tpDatosPersonales.setFont(new java.awt.Font("Lucida Console", 1, 18)); // NOI18N
        tpDatosPersonales.setMaximumSize(new java.awt.Dimension(1200, 600));
        tpDatosPersonales.setPreferredSize(new java.awt.Dimension(1200, 600));

        panelDatosPersonales.setMaximumSize(new java.awt.Dimension(1400, 600));
        panelDatosPersonales.setPreferredSize(new java.awt.Dimension(1400, 630));

        jLabel1.setBackground(new java.awt.Color(102, 255, 204));
        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 22)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Datos Personales");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel2.setText("Nombre");

        txtNombre.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel3.setText("Actividad Física");

        cmbActividadFisica.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbActividadFisica.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Activo", "Ballet", "Besibol o Softbol", "Basquetbol", "Fisicocontructivismo", "Ciclismo", "Gimnasia", "Futbol", "Natación", "Tenis", "Velocidad", "Medio fondo", "Fondo", "Triatlón", "Voleibol", "Lucha" }));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Edad");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Peso");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Estatura en cm.");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Género");

        txtEdad.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtEdad.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtPeso.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtPeso.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtEstatura.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtEstatura.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cbMasculino.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        cbMasculino.setLabel("Masculino");
        cbMasculino.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbMasculinoMouseClicked(evt);
            }
        });

        cbFemenino.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        cbFemenino.setLabel("Femenino");
        cbFemenino.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbFemeninoMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Pliegues cutáneos");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Circunferencias corporales en cm.");

        txtTriceps.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtTriceps.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtSubescapular.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtSubescapular.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtBiceps.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtBiceps.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtPectoral.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtPectoral.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtAxilar.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtAxilar.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtCrestaIliaca.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtCrestaIliaca.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtSupraespinal.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtSupraespinal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtAbdominal.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtAbdominal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtMusloFrontal.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtMusloFrontal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtPantorrillaMedial.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtPantorrillaMedial.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel10.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel10.setText("Tríceps");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel11.setText("Subescapular");

        jLabel12.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel12.setText("Bíceps");

        jLabel13.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel13.setText("Pectoral");

        jLabel14.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel14.setText("Axilar");

        jLabel15.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel15.setText("Cresta iliaca");

        jLabel16.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel16.setText("Supraespinal");

        jLabel17.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel17.setText("Abdominal");

        jLabel18.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel18.setText("Muslo Frontal");

        jLabel19.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel19.setText("Pantorrilla medial");

        jLabel20.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel20.setText("Brazo relajado");

        jLabel21.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel21.setText("Brazo contraido");

        jLabel22.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel22.setText("Cintura");

        jLabel23.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel23.setText("Abdomen");

        jLabel24.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel24.setText("Cadera");

        jLabel25.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel25.setText("Pantorrilla");

        jLabel26.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Diámetros oseos");

        jLabel27.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel27.setText("Húmero");

        jLabel28.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel28.setText("Estiloideo");

        jLabel29.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel29.setText("Fémur");

        txtBrazoRelajado.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtBrazoRelajado.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtBrazoContraido.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtBrazoContraido.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtCintura.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtCintura.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtAbdomen.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtAbdomen.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtCadera.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtCadera.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtPantorrilla.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtPantorrilla.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtHumero.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtHumero.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtEstiloideo.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtEstiloideo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtFemur.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        txtFemur.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout panelDatosPersonalesLayout = new javax.swing.GroupLayout(panelDatosPersonales);
        panelDatosPersonales.setLayout(panelDatosPersonalesLayout);
        panelDatosPersonalesLayout.setHorizontalGroup(
            panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(180, 180, 180)
                                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(180, 180, 180)
                                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                                        .addComponent(txtEstatura, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(184, 184, 184)
                                        .addComponent(cbMasculino)
                                        .addGap(37, 37, 37)
                                        .addComponent(cbFemenino))
                                    .addComponent(jLabel6)))
                            .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                                .addGap(420, 420, 420)
                                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(100, 100, 100)
                                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHumero)
                                    .addComponent(txtFemur, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEstiloideo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 54, Short.MAX_VALUE))
                    .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbActividadFisica, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(100, 100, 100)
                                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtSubescapular, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                                .addComponent(txtBiceps)
                                                .addComponent(txtPectoral)
                                                .addComponent(txtAxilar)
                                                .addComponent(txtCrestaIliaca)
                                                .addComponent(txtSupraespinal)
                                                .addComponent(txtTriceps))
                                            .addComponent(txtMusloFrontal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPantorrillaMedial, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAbdominal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(100, 100, 100)
                                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                                            .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(100, 100, 100)
                                            .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtBrazoRelajado)
                                                .addComponent(txtBrazoContraido)
                                                .addComponent(txtCintura)
                                                .addComponent(txtAbdomen)
                                                .addComponent(txtCadera)
                                                .addComponent(txtPantorrilla, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))))
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelDatosPersonalesLayout.setVerticalGroup(
            panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbActividadFisica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cbMasculino, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtEstatura, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEdad, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPeso, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbFemenino, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10)
                    .addComponent(txtTriceps)
                    .addComponent(txtBrazoRelajado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSubescapular)
                    .addComponent(txtBrazoContraido)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtBiceps)
                    .addComponent(txtCintura)
                    .addComponent(jLabel22)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPectoral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAbdomen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAxilar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCadera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCrestaIliaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPantorrilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtSupraespinal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtAbdominal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMusloFrontal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPantorrillaMedial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)))
                    .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDatosPersonalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                                .addComponent(txtEstiloideo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFemur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelDatosPersonalesLayout.createSequentialGroup()
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel29)))))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        tpDatosPersonales.addTab("Datos Personales", panelDatosPersonales);

        panelMediciones.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelMedicionesComponentShown(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Cooper Black", 1, 24)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Índices");

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("IMC");

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("CC cm");

        txtIMC.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtIMC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtIMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIMCActionPerformed(evt);
            }
        });

        txtCC.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtCC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCCActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Cooper Black", 1, 24)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Somatotipo");

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Endomorfia");

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("Mesomorfia");

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("Ectomorfia");

        txtEndomorfia.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtEndomorfia.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEndomorfia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEndomorfiaActionPerformed(evt);
            }
        });

        txtMesomorfia.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtMesomorfia.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMesomorfia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMesomorfiaActionPerformed(evt);
            }
        });

        txtEctomorfia.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtEctomorfia.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEctomorfia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEctomorfiaActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("Clasificación");

        txtClasificacion.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtClasificacion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtClasificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClasificacionActionPerformed(evt);
            }
        });

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("Recomendado");

        txtEndomorfiaRCD.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtEndomorfiaRCD.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtMesomorfiaRCD.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtMesomorfiaRCD.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtEctomorfiaRCD.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtEctomorfiaRCD.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel40.setFont(new java.awt.Font("Cooper Black", 1, 24)); // NOI18N
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("Fórmulas para determinar DC y %GC");

        btnDurninWomersley.setText("Durnin y Womersley (1974)");
        btnDurninWomersley.setToolTipText("Varones \nEdad: 17 - 72 \nCaracterística: variedad de tipos corporales \nMujeres Edad: 16 - 68");

        btnThorlandJohnson.setText("Thorland, Johnson, Tharp, Housh y Cisar (1984)");
        btnThorlandJohnson.setToolTipText("Varones \nEdad: Media 17.43 \nCaracterística: Deportistas nivel nacional \nMujeres \nEdad: Media 16.51");

        btnSloanBurtBlyth.setText("Sloan, Burt y Blyth (1962)");
        btnSloanBurtBlyth.setToolTipText("Mujeres \nEdad: 17 – 25 \nCaracterísticas: Estudiantes universitarios");

        btnSloan.setText("Sloan (1967)");
        btnSloan.setToolTipText("Varones \nEdad: 18 – 26 \nCaracterística: Estudiantes universitarios");

        btnPolloclkLaughridge.setText("Pollock, Laughridge, Coleman, Linneurd y Jackson (1975)");
        btnPolloclkLaughridge.setToolTipText("Mujeres\nEdad: 18 – 22 \nCaracterísticas: estudiantes universitarios de educación física");

        btnKatchMcArdle.setText("Katch y McArdle (1973)");
        btnKatchMcArdle.setToolTipText("Varones \nEdad: media 19.3 \nCaracterísticas: estudiantes universitarios de educación física");

        btnLewisHaskell.setText("Lewis, Haskell, Perry, Kovacevic y Wood (1978)");
        btnLewisHaskell.setToolTipText("Mujeres \nEdad: 30-59 \nCaracterísticas: corredoras de media y larga distancia y nadadores nacionales e internacionales");

        btnJacksonPollock.setText("Jackson, Pollock y y Ward (1980)");
        btnJacksonPollock.setToolTipText("Mujeres \nEdad: 18-55 \nCaracterísticas: amplio rango estructura corporal variable");

        btnJacksonAndPollock.setText("Jackson y Pollock... (1978)");
        btnJacksonAndPollock.setToolTipText("Varones y Mujeres\nCaracterísticas: Atletas");

        btnWilmoreBehnke.setText("Wilmore y Behnke (1969)");
        btnWilmoreBehnke.setToolTipText("Varones \nEdad: 16.80 – 36.80 \nCaracterísticas: estudiantes universitarios de educación física \n\nMujeres \nEdad: 17.80 +/- 47.80");

        btnWithersCraig.setText("Withers, Craig, Bourdon, y Norton (1987)");
        btnWithersCraig.setToolTipText("Varones \nEdad: 25.4- 39.1 \nCaracterísticas: nivel internacional y nacional en diferentes disciplinas deportivas\n\nMujeres \nEdad 11.2 – 41.4");

        jLabel41.setFont(new java.awt.Font("Cooper Black", 1, 24)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("Complexión");

        txtComplexion.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtComplexion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtComplexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComplexionActionPerformed(evt);
            }
        });

        jLabel42.setFont(new java.awt.Font("Cooper Black", 1, 24)); // NOI18N
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("ICC");

        txtICC.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtICC.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtICC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtICCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMedicionesLayout = new javax.swing.GroupLayout(panelMediciones);
        panelMediciones.setLayout(panelMedicionesLayout);
        panelMedicionesLayout.setHorizontalGroup(
            panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMedicionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelMedicionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMedicionesLayout.createSequentialGroup()
                .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMedicionesLayout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelMedicionesLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEndomorfia)
                            .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtEndomorfiaRCD))
                        .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelMedicionesLayout.createSequentialGroup()
                                .addGap(200, 200, 200)
                                .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtMesomorfia)))
                            .addGroup(panelMedicionesLayout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addComponent(txtMesomorfiaRCD, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(197, 197, 197)
                        .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(txtEctomorfia)
                            .addComponent(txtEctomorfiaRCD))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(txtClasificacion))
                .addGap(123, 123, 123))
            .addGroup(panelMedicionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelMedicionesLayout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(txtComplexion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(txtICC))
                .addGap(199, 199, 199))
            .addGroup(panelMedicionesLayout.createSequentialGroup()
                .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMedicionesLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSloan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnSloanBurtBlyth, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnThorlandJohnson, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnDurninWomersley, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(80, 80, 80)
                        .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPolloclkLaughridge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnJacksonPollock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLewisHaskell, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnKatchMcArdle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(80, 80, 80)
                        .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnWilmoreBehnke, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnWithersCraig, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                            .addComponent(btnJacksonAndPollock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelMedicionesLayout.createSequentialGroup()
                        .addGap(369, 369, 369)
                        .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtIMC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(250, 250, 250)
                        .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCC, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(65, 70, Short.MAX_VALUE))
        );
        panelMedicionesLayout.setVerticalGroup(
            panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMedicionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtIMC, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(txtCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMedicionesLayout.createSequentialGroup()
                        .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEndomorfia, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(txtMesomorfia)
                            .addComponent(txtEctomorfia, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEndomorfiaRCD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMesomorfiaRCD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEctomorfiaRCD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelMedicionesLayout.createSequentialGroup()
                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtICC, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(txtComplexion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMedicionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelMedicionesLayout.createSequentialGroup()
                        .addComponent(btnDurninWomersley, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThorlandJohnson, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSloanBurtBlyth, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSloan, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelMedicionesLayout.createSequentialGroup()
                        .addComponent(btnJacksonPollock, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLewisHaskell, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnKatchMcArdle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPolloclkLaughridge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelMedicionesLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnWilmoreBehnke, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnWithersCraig, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(btnJacksonAndPollock, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        tpDatosPersonales.addTab("Mediciones", panelMediciones);

        panelComposicionCorporal.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelComposicionCorporalComponentShown(evt);
            }
        });

        jLabel43.setFont(new java.awt.Font("Cooper Black", 1, 24)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("Composición corporal");

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("Kg. Masa magra");

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel45.setText("Kg. Grasa");

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel46.setText("Kg. Músculo");

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel47.setText("Kg. Óseo");

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel48.setText("Kg. Residual");

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("REAL");

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("RECOMENDADO");

        txtMasaMagra.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtKgGrasa.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtKgMusculo.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtKgOseo.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtKgResidual.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel51.setText("% Grasa");

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel52.setText("% Músculo");

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel53.setText("% Óseo");

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel54.setText("% Residual");

        txtPorcentajeGrasaReal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtPorcentajeMusculoReal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtPorcentajeOseoReal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtPorcentajeResidualReal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel55.setText("% Grasa");

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel56.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel56.setText("% Músculo");

        jLabel57.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel57.setText("% Óseo");

        jLabel58.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel58.setText("% Residual");

        txtPorcentajeGrasaRCD.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtPorcentajeMusculoRCD.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtPorcentajeOseoRCD.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtPorcentajeResidualRCD.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        btnExportarWord.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnExportarWord.setLabel("Exportar a Word");
        btnExportarWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarWordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelComposicionCorporalLayout = new javax.swing.GroupLayout(panelComposicionCorporal);
        panelComposicionCorporal.setLayout(panelComposicionCorporalLayout);
        panelComposicionCorporalLayout.setHorizontalGroup(
            panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelComposicionCorporalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelComposicionCorporalLayout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelComposicionCorporalLayout.createSequentialGroup()
                        .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtKgGrasa, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(txtKgMusculo, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(txtKgOseo, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(txtKgResidual, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelComposicionCorporalLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel54, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelComposicionCorporalLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPorcentajeMusculoReal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPorcentajeOseoReal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPorcentajeResidualReal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPorcentajeGrasaReal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(panelComposicionCorporalLayout.createSequentialGroup()
                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMasaMagra, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelComposicionCorporalLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel58, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPorcentajeGrasaRCD)
                            .addComponent(txtPorcentajeMusculoRCD)
                            .addComponent(txtPorcentajeOseoRCD)
                            .addComponent(txtPorcentajeResidualRCD, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(269, 269, 269))
                    .addGroup(panelComposicionCorporalLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelComposicionCorporalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExportarWord, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        panelComposicionCorporalLayout.setVerticalGroup(
            panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelComposicionCorporalLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelComposicionCorporalLayout.createSequentialGroup()
                        .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMasaMagra, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelComposicionCorporalLayout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtKgMusculo, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                    .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(50, 50, 50)
                                .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtKgOseo, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                    .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(50, 50, 50)
                                .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtKgResidual, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)))
                            .addGroup(panelComposicionCorporalLayout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelComposicionCorporalLayout.createSequentialGroup()
                                        .addComponent(txtPorcentajeOseoReal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(txtPorcentajeResidualReal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelComposicionCorporalLayout.createSequentialGroup()
                                        .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPorcentajeMusculoReal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(50, 50, 50)
                                        .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelComposicionCorporalLayout.createSequentialGroup()
                        .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtKgGrasa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPorcentajeGrasaRCD)
                            .addComponent(txtPorcentajeGrasaReal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPorcentajeMusculoRCD)
                            .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPorcentajeOseoRCD)
                            .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(panelComposicionCorporalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel58, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPorcentajeResidualRCD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10)
                .addComponent(btnExportarWord, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        tpDatosPersonales.addTab("Composición corporal", panelComposicionCorporal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tpDatosPersonales, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpDatosPersonales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(0, 0, 1216, 638);
    }// </editor-fold>//GEN-END:initComponents
    
    private void panelMedicionesComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelMedicionesComponentShown
        if(txtNombre.getText().isEmpty() || txtEdad.getText().isEmpty() || txtPeso.getText().isEmpty() || txtEstatura.getText().isEmpty() ||  
                !(cbMasculino.isSelected() || cbFemenino.isSelected()) ||
                txtTriceps.getText().isEmpty() || 
                txtSubescapular.getText().isEmpty() || 
                txtBiceps.getText().isEmpty() ||
                txtPectoral.getText().isEmpty() ||
                txtAxilar.getText().isEmpty() ||
                txtCrestaIliaca.getText().isEmpty() ||  
                txtSupraespinal.getText().isEmpty() ||
                txtAbdominal.getText().isEmpty() ||
                txtMusloFrontal.getText().isEmpty() ||
                txtPantorrillaMedial.getText().isEmpty() ||
                
                txtBrazoRelajado.getText().isEmpty() ||
                txtBrazoContraido.getText().isEmpty() || 
                txtCintura.getText().isEmpty() || 
                txtAbdomen.getText().isEmpty() ||
                txtCadera.getText().isEmpty() ||
                txtPantorrilla.getText().isEmpty() || 
                txtHumero.getText().isEmpty() || 
                txtEstiloideo.getText().isEmpty() ||
                txtFemur.getText().isEmpty() ) {
            JOptionPane.showMessageDialog(rootPane, "Necesita introducir todos los datos en la pestaña de \"Datos Personales\"");
        } else {
            txtIMCActionPerformed(null);
            txtCCActionPerformed(null);
            txtEndomorfiaActionPerformed(null);
            txtMesomorfiaActionPerformed(null);
            txtEctomorfiaActionPerformed(null);
            txtClasificacionActionPerformed(null);
            txtICCActionPerformed(null);
            txtComplexionActionPerformed(null);
        }
    }//GEN-LAST:event_panelMedicionesComponentShown
	
    private void txtIMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIMCActionPerformed
        double peso = 0;
        double estatura = 0;
        
        txtIMC.setEditable(false);
        
        try{
            peso = Double.parseDouble(txtPeso.getText());
            estatura = Double.parseDouble(txtEstatura.getText());
        } catch (NumberFormatException nfe){
            JOptionPane.showMessageDialog(rootPane, "El dato: " + nfe.getMessage().substring(18) + " NO es un dato válido");
        }
        if(peso > 0 && estatura > 0){
            DecimalFormat df = new DecimalFormat("#.##");
            txtIMC.setText(String.valueOf(df.format(peso/(Math.pow((estatura/100), 2)))));
        } else{
            JOptionPane.showMessageDialog(rootPane, "El peso y la estatura deben ser mayores a cero");
        }
    }//GEN-LAST:event_txtIMCActionPerformed
	
    private void txtCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCCActionPerformed
        double cintura = 0;
        double cadera = 0;
        
        txtCC.setEditable(false);
        
        try{
        cadera = Double.parseDouble(txtCadera.getText());
        cintura = Double.parseDouble(txtCintura.getText());
        } catch (NumberFormatException nfe){
            JOptionPane.showMessageDialog(rootPane, "El dato: " + nfe.getMessage().substring(18) + " NO es un dato válido");
        }
        if (cadera > 0 && cintura > 0){
            DecimalFormat df = new DecimalFormat("#.##");
            txtCC.setText(String.valueOf(df.format(cintura/cadera)));
        } else {
            JOptionPane.showMessageDialog(rootPane, "EL diámetro de la cadera y la cintura deben ser mayores a cero");
        }
    }//GEN-LAST:event_txtCCActionPerformed

    private void txtEndomorfiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEndomorfiaActionPerformed
        double triceps = 0;
        double subescapular = 0;
        double supraespinal = 0;
        double estatura = 0;
        double endomorfiaCorregida = 0;
        
        txtEndomorfia.setEditable(false);
       
        try{
            triceps = Double.parseDouble(txtTriceps.getText());
            subescapular = Double.parseDouble(txtSubescapular.getText());
            supraespinal = Double.parseDouble(txtSupraespinal.getText());
            estatura = Double.parseDouble(txtEstatura.getText());
        } catch (NumberFormatException nfe){
            JOptionPane.showMessageDialog(rootPane, "El dato: " + nfe.getMessage().substring(18) + " NO es un dato válido");
        }
        if(triceps > 0 && subescapular > 0 && supraespinal > 0 && estatura > 0){
            endomorfiaCorregida = (triceps + subescapular + supraespinal)*(170.18 / estatura);
            DecimalFormat df = new DecimalFormat("#.#");
            txtEndomorfia.setText(String.valueOf(df.format(-0.7182 + 0.1451 * endomorfiaCorregida - 0.00068 * 
                    (Math.pow(endomorfiaCorregida, 2)) + 0.0000014 * (Math.pow(endomorfiaCorregida, 3)))));
        } else {
            if(supraespinal == 0 ){
                JOptionPane.showMessageDialog(rootPane, "EL diámetro Supraespinal debe ser mayor a cero: ");
            }
        }
    }//GEN-LAST:event_txtEndomorfiaActionPerformed

    private void txtMesomorfiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMesomorfiaActionPerformed
        double brazoCorregido = 0;
        double brazoContraido = 0;
        double triceps = 0;
        double pantorrillaCorregida = 0;
        double pantorrilla = 0;
        double pantorrillaMedial = 0;
        double humero = 0;
        double femur = 0;
        double estatura = 0;
        
        txtMesomorfia.setEditable(false);
        
        try{
            brazoContraido = Double.parseDouble(txtBrazoContraido.getText());
            triceps = Double.parseDouble(txtTriceps.getText());
            pantorrilla = Double.parseDouble(txtPantorrilla.getText());
            pantorrillaMedial = Double.parseDouble(txtPantorrillaMedial.getText());
            humero = Double.parseDouble(txtHumero.getText());
            femur = Double.parseDouble(txtFemur.getText());
            estatura = Double.parseDouble(txtEstatura.getText());
        } catch (NumberFormatException nfe){
            JOptionPane.showMessageDialog(rootPane, "El dato: " + nfe.getMessage().substring(18) + " NO es un dato válido");
        }
        if(brazoContraido > 0 && triceps > 0 && pantorrilla > 0 && pantorrillaMedial > 0 && humero > 0 && femur > 0 && estatura > 0){
            brazoCorregido = brazoContraido - triceps/10;
            pantorrillaCorregida = pantorrilla - pantorrillaMedial/10;
            DecimalFormat df = new DecimalFormat("#.#");
            txtMesomorfia.setText(String.valueOf(df.format(0.858 * humero + 0.601 * femur + 0.188 * brazoCorregido + 0.161 * 
                    pantorrillaCorregida - estatura * 0.131 + 4.5)));
        } else {
            if(brazoContraido == 0 || pantorrilla == 0 || humero == 0 || femur == 0 ){
                JOptionPane.showMessageDialog(rootPane, "EL diámetro de los siguientes parámetros deben ser mayores a cero: "
                        + "Brazo contraido, Pantorrilla, Húmero y Femur");
            }
        }
    }//GEN-LAST:event_txtMesomorfiaActionPerformed

    private void txtEctomorfiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEctomorfiaActionPerformed
        double estatura = 0;
        double peso = 0;
        double indicePonderal = 0;
        
        txtEctomorfia.setEditable(false);
        
        try{
            estatura = Double.parseDouble(txtEstatura.getText());
            peso = Double.parseDouble(txtPeso.getText());
        } catch (NumberFormatException nfe){
            JOptionPane.showMessageDialog(rootPane, "El dato: " + nfe.getMessage().substring(18) + " NO es un dato válido");
        }
        
        DecimalFormat df = new DecimalFormat("#.#");
        
        if(estatura > 0 && peso > 0){
            indicePonderal = estatura / Math.cbrt(peso);
            if(indicePonderal >= 40.75){
                txtEctomorfia.setText(String.valueOf(df.format((indicePonderal * 0.732) - 28.58)));
            } else if(indicePonderal < 40.75 && indicePonderal >= 38.28){
                txtEctomorfia.setText(String.valueOf(df.format((indicePonderal * 0.463) - 17.63)));
            } else {
                txtEctomorfia.setText("0.1");
            }
        }
    }//GEN-LAST:event_txtEctomorfiaActionPerformed

    private void txtClasificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClasificacionActionPerformed
        double endomorfia = 0;
        double mesomorfia = 0;
        double ectomorfia = 0;
        try{
            endomorfia = Double.parseDouble(txtEndomorfia.getText());
            mesomorfia = Double.parseDouble(txtMesomorfia.getText());
            ectomorfia = Double.parseDouble(txtEctomorfia.getText());
        } catch (NumberFormatException nfe){
            nfe.printStackTrace();
        }
        
        txtClasificacion.setEditable(false);
        while(true){
            if((endomorfia == mesomorfia) && (endomorfia == ectomorfia) && (mesomorfia == ectomorfia)){
                txtClasificacion.setText("Central");
                break;
            }
            if((endomorfia > mesomorfia) && (endomorfia > ectomorfia) && (((ectomorfia - mesomorfia) <= 0.599) && ((ectomorfia - mesomorfia) >= -0.599))){
                txtClasificacion.setText("Endomórfico - balanceado");
                break;
            }
            if((endomorfia > mesomorfia) && (endomorfia > ectomorfia) && (ectomorfia > mesomorfia)){
                txtClasificacion.setText("Endomorfo - Ectomórfico");
                break;
            }
            if((endomorfia > mesomorfia) && (endomorfia > ectomorfia) && (mesomorfia > ectomorfia)){
                txtClasificacion.setText("Endomorfo-mesomórfico");
                break;
            }
            if((((endomorfia - mesomorfia) <= 0.599) && ((endomorfia - mesomorfia) >= -0.599)) && ((ectomorfia < mesomorfia) &&( ectomorfia < endomorfia))){
                txtClasificacion.setText("Endomorfo mesomorfo");
                break;
            }
            if((mesomorfia > endomorfia) && (mesomorfia > ectomorfia) && (((endomorfia - ectomorfia) <= 0.599) && ((endomorfia - ectomorfia) >= -0.599))){
                txtClasificacion.setText("Mesomórfico balanceado");
                break;
            }
            if((mesomorfia > endomorfia) && (mesomorfia > ectomorfia) && (endomorfia > ectomorfia)){
                txtClasificacion.setText("Mesomorfo - endomórfico");
                break;
            }
            if((mesomorfia > ectomorfia) && (mesomorfia > endomorfia) && (ectomorfia > endomorfia)){
                txtClasificacion.setText("Mesomorfo ectomórfico");
                break;
            }
            if((((ectomorfia - mesomorfia) <= 0.599) && ((ectomorfia - mesomorfia) >= -0.599)) && ((endomorfia < mesomorfia) &&( endomorfia < ectomorfia))){
                txtClasificacion.setText("Ectomorfo mesomorfo");
                break;
            }
            if((ectomorfia > endomorfia) && (ectomorfia > mesomorfia) && (((endomorfia - mesomorfia) <= 0.599) && ((endomorfia - mesomorfia) >= -0.599))){
                txtClasificacion.setText("Ectomórfico balanceado");
                break;
            }
            if((((endomorfia - ectomorfia) <= 0.599) && ((endomorfia - ectomorfia) >= -0.599)) && ((mesomorfia < ectomorfia) &&( mesomorfia < endomorfia))){
                txtClasificacion.setText("Ectomorfo endomorfo");
                break;
            }
            if((ectomorfia > endomorfia) && (ectomorfia > mesomorfia) && (mesomorfia > endomorfia)){
                txtClasificacion.setText("Ectomorfo - mesomórfico");
                break;
            }
            if((ectomorfia > endomorfia) && (ectomorfia > mesomorfia) && (endomorfia > mesomorfia)){
                txtClasificacion.setText("Ectomorfo endomórfico");
                break;
            }
        }
    }//GEN-LAST:event_txtClasificacionActionPerformed

    private void txtICCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtICCActionPerformed
        txtICC.setEditable(false);
        try{
            double cintura = Double.parseDouble(txtCintura.getText());
            double cadera = Double.parseDouble(txtCadera.getText());
            if(cadera > 0){
                Double ICC = cintura/cadera;
                if(cbMasculino.isSelected()){
                    if(ICC >= 1.0){
                        txtICC.setText("Androide");
                    } else {
                        txtICC.setText("Ginecoide");
                    }
                } else {
                    if(ICC >= 0.8){
                        txtICC.setText("Androide");
                    } else {
                        txtICC.setText("Ginecoide");
                    }
                }
            } else {
                txtICC.setText("Introduzca diametro cadera");
            }
        } catch (NumberFormatException nfe){
            nfe.printStackTrace();
        }
    }//GEN-LAST:event_txtICCActionPerformed

    private void panelComposicionCorporalComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelComposicionCorporalComponentShown
        double peso = 0;
        double estatura = 0;
        double edad = 0;
        double subescapular = 0;
        double crestaIliaca = 0;
        double triceps = 0;
        double biceps = 0;
        double pantorrillaMedial = 0;
        double axilar = 0;
        double abdominal = 0;
        double musloFrontal = 0;
        double brazoRelajado = 0;
        double supraespinal = 0;
        double abdomen = 0;
        double pectoral = 0;
        double estiloideo = 0;
        double femur = 0;
        String porcentajeGrasaRCD = "";
        int actividadFisica = 0;
        
        int botonesSeleccionados = 0;
        
        double dc= 0;
        double gcDW = 0;
        double gcTJ = 0;
        double gcSBB = 0;
        double gcSloan = 0;
        double gcJPW = 0;
        double gcLHPKW = 0;
        double gcKM = 0;
        double gcPLCLJ = 0;
        double gcWB = 0;
        double gcJ = 0;
        double gcWCBN = 0;
        
        txtMasaMagra.setEditable(false);
        txtKgGrasa.setEditable(false);
        txtKgMusculo.setEditable(false);
        txtKgOseo.setEditable(false);
        txtKgResidual.setEditable(false);
        
        txtPorcentajeGrasaReal.setEditable(false);
        txtPorcentajeMusculoReal.setEditable(false);
        txtPorcentajeOseoReal.setEditable(false);
        txtPorcentajeResidualReal.setEditable(false);
        
        //txtPorcentajeGrasaRCD.setEditable(false);
        
        try{
            peso = Double.parseDouble(txtPeso.getText());
            estatura = Double.parseDouble(txtEstatura.getText());
            triceps = Double.parseDouble(txtTriceps.getText());
            biceps = Double.parseDouble(txtBiceps.getText());
            subescapular = Double.parseDouble(txtSubescapular.getText());
            crestaIliaca = Double.parseDouble(txtCrestaIliaca.getText());
            axilar = Double.parseDouble(txtAxilar.getText());
            abdominal = Double.parseDouble(txtAbdominal.getText());
            musloFrontal = Double.parseDouble(txtMusloFrontal.getText());
            pantorrillaMedial =  Double.parseDouble(txtPantorrillaMedial.getText());
            edad = Double.parseDouble(txtEdad.getText());
            brazoRelajado = Double.parseDouble(txtBrazoRelajado.getText());
            pectoral = Double.parseDouble(txtPectoral.getText());
            estiloideo = Double.parseDouble(txtEstiloideo.getText());
            femur = Double.parseDouble(txtFemur.getText());
            abdomen = Double.parseDouble(txtAbdomen.getText());
            supraespinal = Double.parseDouble(txtSupraespinal.getText());
        } catch (NumberFormatException nfe){}
        
        try{
            actividadFisica = cmbActividadFisica.getSelectedIndex();
        } catch (Exception e){}
        
        switch (actividadFisica) {
            case 0:
                if(cbFemenino.isSelected() && (edad >= 20 && edad <= 29)) {
                    porcentajeGrasaRCD = "29-34";
                }
                if(cbMasculino.isSelected() && (edad >= 20 && edad <= 29)) {
                    porcentajeGrasaRCD = "21-26";
                }
            break;
            case 1:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "13-20";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "8-14";
                }
            break;
            case 2:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "13-20";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "8-14";
                }
            break;
            case 3:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "20-27";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "7-11";
                }
            break;
            case 4:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "9-13";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "6-9";
                }
            break;
            case 5:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "15";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "8-10";
                }
            break;
            case 6:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "10-17";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "5-10";
                }
            break;
            case 7:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "10";
                }
            break;
            case 8:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "14-24";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "9-12";
                }
            break;
            case 9:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "20";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "15-16";
                }
            break;
            case 10:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "11-19";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "8-9";
                }
            break;
            case 11:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "10-14";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "7-12";
                }
            break;
            case 12:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "10-19";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "6-13";
                }
            break;
            case 13:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "7-17";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "5-11";
                }
            break;
            case 14:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "16-25";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "11-12";
                }
            break;
            case 15:
                if(cbFemenino.isSelected()) {
                    porcentajeGrasaRCD = "";
                }
                if(cbMasculino.isSelected()) {
                    porcentajeGrasaRCD = "5-12";
                }
            break;                            
        }
        
        if(btnDurninWomersley.isSelected()){
            botonesSeleccionados++;
            double x1 = triceps + biceps + subescapular + crestaIliaca;
            if(cbMasculino.isSelected()){
                dc = 1.1765 - 0.0744 * (Math.log10(x1));
            } else {
                dc = 1.1567 - 0.0717 * (Math.log10(x1));
            }
            gcDW = 495 / dc - 450;//Siri
        }
        
        if(btnThorlandJohnson.isSelected()){
            botonesSeleccionados++;
            if(cbMasculino.isSelected()){
                double x1 = triceps + subescapular + axilar + crestaIliaca + abdominal + musloFrontal + pantorrillaMedial;
                dc = 1.1091 - 0.00052 * x1 + 0.00000032 * Math.pow(x1,2);
            } else {
                double x2 = triceps + subescapular + crestaIliaca;
                dc = 1.0987 - 0.00122 * x2 + 0.00000263 * Math.pow(x2,2);
            }
            gcTJ = 495 / dc - 450;//Siri
        }
        
        if(btnSloanBurtBlyth.isSelected()){
            if(cbFemenino.isSelected()){
                botonesSeleccionados++;
                dc = 1.0764 - 0.00081 * crestaIliaca - 0.00088 * triceps;
                gcSBB = 495 / dc - 450;//Siri
            }
        }
        
        if(btnSloan.isSelected()){
            if(cbMasculino.isSelected()){
                botonesSeleccionados++;
                dc = 1.1043 - 0.001327 * musloFrontal - 0.001310 * subescapular;
                gcSloan = 457 / dc - 414;
            }
        }
        
        if(btnJacksonPollock.isSelected()){
            if(cbFemenino.isSelected()){
                botonesSeleccionados++;
                double x2= triceps + musloFrontal + crestaIliaca;
                dc = 1.21389 - 0.04057 * Math.log10(x2) - 0.00016 * edad;
                gcJPW = 495 / dc - 450;//Siri
            }
        }
        
        if(btnLewisHaskell.isSelected()){
            if(cbFemenino.isSelected()){
                botonesSeleccionados++;
                dc = 0.97845 - 0.0002 * triceps + 0.00088 * estatura - 0.00122 * subescapular - 0.00234 * brazoRelajado;
                gcLHPKW = 495 / dc - 450;//Siri
            }
        }
        
        if(btnKatchMcArdle.isSelected()){
            if(cbMasculino.isSelected()){
                botonesSeleccionados++;
                dc = 1.09665 - 0.00103 * triceps - 0.00056 * subescapular - 0.00054 * abdominal;
                gcKM = 457 / dc - 414;
            }
        }
        
        if(btnPolloclkLaughridge.isSelected()){
            if(cbFemenino.isSelected()){
                botonesSeleccionados++;
                dc = 1.0852 - 0.0008 * crestaIliaca - 0.0011 * musloFrontal;
                gcPLCLJ = 495 / dc - 450;//Siri
            }
        }
        
        if(btnWilmoreBehnke.isSelected()){
            botonesSeleccionados++;
            if(cbMasculino.isSelected()){
                dc = 1.08543 - 0.000886 * abdominal - 0.00040 * musloFrontal;
            } else {
                dc = 1.06234 - 0.00068 * subescapular - 0.00039 * triceps - 0.00025 * musloFrontal;
            }
            gcWB = 495 / dc - 450;//Siri
        }
        
        if(btnWithersCraig.isSelected()){
            botonesSeleccionados++;
            if(cbMasculino.isSelected()){
                dc = 1.0988 - 0.0004 * (triceps + subescapular + biceps + supraespinal + abdominal + musloFrontal + pantorrillaMedial);
            } else {
                dc = 1.17484 - 0.07229 * Math.log10(triceps + subescapular + supraespinal + pantorrillaMedial);
            }
            gcWCBN = 495 / dc - 450;//Siri
        }
        
        if(btnJacksonAndPollock.isSelected()){
            botonesSeleccionados++;
            if(cbMasculino.isSelected()){
                dc = 1.112 - 0.00043499 * (triceps + pectoral + axilar + subescapular + abdomen + crestaIliaca + musloFrontal)
                        + 0.00000055 * Math.pow((triceps + pectoral + axilar + subescapular + abdomen + crestaIliaca + musloFrontal),2) 
                        - 0.00028826 * edad;
            } else {
                dc = 1.096095 - 0.0006952 * (triceps + supraespinal +abdomen + musloFrontal) + 0.0000011 * 
                        Math.pow((triceps + supraespinal +abdomen + musloFrontal),2) - 0.0000714 * edad;
            }
            gcJ = 495 / dc - 450;//Siri
        }
        
        double porcentajeGrasaCorporal = (gcDW + gcTJ + gcSBB + gcSloan + gcJPW + gcLHPKW + gcKM + gcPLCLJ + gcWB + gcJ + gcWCBN) / botonesSeleccionados;
        
        double kiloGrasa = (peso * porcentajeGrasaCorporal)/100;
        double masaMagra = peso - (peso * porcentajeGrasaCorporal)/100;
        double kiloOseo = 3.02 * Math.pow((Math.pow(estatura/100,2) * estiloideo/100 * femur/100 * 400),0.712);
        double porcentajeOseo = (kiloOseo * 100) / peso;
        double porcentajeResidual = 0;
        if(cbMasculino.isSelected()){
            porcentajeResidual = 24;
        } else {
            porcentajeResidual = 21;
        }
        double porcentajeMusculo = 100 - (porcentajeGrasaCorporal + porcentajeOseo + porcentajeResidual);
        double kiloMusculo = (peso * porcentajeMusculo) / 100;
        double kiloResidual = (peso * porcentajeResidual)/100;
        
        DecimalFormat df = new DecimalFormat("#.#");
        
        txtMasaMagra.setText(String.valueOf(df.format(masaMagra)));
        txtKgGrasa.setText(String.valueOf(df.format(kiloGrasa)));
        txtKgMusculo.setText(String.valueOf(df.format(kiloMusculo)));
        txtKgOseo.setText(String.valueOf(df.format(kiloOseo)));
        txtKgResidual.setText(String.valueOf(kiloResidual));
        txtPorcentajeGrasaReal.setText(String.valueOf(df.format(porcentajeGrasaCorporal)));
        txtPorcentajeMusculoReal.setText(String.valueOf(df.format(porcentajeMusculo)));
        txtPorcentajeOseoReal.setText(String.valueOf(df.format(porcentajeOseo)));
        txtPorcentajeResidualReal.setText(String.valueOf(df.format(porcentajeResidual)));
        
        txtPorcentajeGrasaRCD.setText(porcentajeGrasaRCD);
        
    }//GEN-LAST:event_panelComposicionCorporalComponentShown

    private void txtComplexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComplexionActionPerformed
        double humero = Double.parseDouble(txtHumero.getText());
        double edad = Double.parseDouble(txtEdad.getText());
        
        if(cbMasculino.isSelected()){
            if(edad <= 24){
                if (humero <= 6.7){
                    txtComplexion.setText("Chica");
                } else if ((humero > 6.7)&&(humero < 7.6)){
                    txtComplexion.setText("Mediana");
                } else {
                    txtComplexion.setText("Grande");
                }
            }
            if((edad >= 25)&&(edad <= 34)){
                if (humero <= 6.8){
                    txtComplexion.setText("Chica");
                } else if ((humero > 6.8)&&(humero < 7.6)){
                    txtComplexion.setText("Mediana");
                } else {
                    txtComplexion.setText("Grande");
                }
            }
            if((edad >= 35)&&(edad <= 44)){
                if (humero <= 6.7){
                    txtComplexion.setText("Chica");
                } else if ((humero > 6.7)&&(humero < 7.7)){
                    txtComplexion.setText("Mediana");
                } else {
                    txtComplexion.setText("Grande");
                }
            }
            if((edad >= 45)&&(edad <= 54)){
                if (humero <= 6.9){
                    txtComplexion.setText("Chica");
                } else if ((humero > 6.9)&&(humero < 7.9)){
                    txtComplexion.setText("Mediana");
                } else {
                    txtComplexion.setText("Grande");
                }
            }
            if((edad >= 55)&&(edad <= 64)){
                if (humero <= 6.9){
                    txtComplexion.setText("Chica");
                } else if ((humero > 6.9)&&(humero < 7.9)){
                    txtComplexion.setText("Mediana");
                } else {
                    txtComplexion.setText("Grande");
                }
            }
            if(edad >= 65){
                if (humero <= 6.9){
                    txtComplexion.setText("Chica");
                } else if ((humero > 6.8)&&(humero < 7.8)){
                    txtComplexion.setText("Mediana");
                } else {
                    txtComplexion.setText("Grande");
                }
            }
        } else {
            if(edad <= 24){
                if (humero <= 5.8){
                    txtComplexion.setText("Chica");
                } else if ((humero > 5.8)&&(humero < 6.6)){
                    txtComplexion.setText("Mediana");
                } else {
                    txtComplexion.setText("Grande");
                }
            }
            if((edad >= 25)&&(edad <= 34)){
                if (humero <= 5.8){
                    txtComplexion.setText("Chica");
                } else if ((humero > 5.8)&&(humero < 6.7)){
                    txtComplexion.setText("Mediana");
                } else {
                    txtComplexion.setText("Grande");
                }
            }
            if((edad >= 35)&&(edad <= 44)){
                if (humero <= 6.0){
                    txtComplexion.setText("Chica");
                } else if ((humero > 6.0)&&(humero < 7.0)){
                    txtComplexion.setText("Mediana");
                } else {
                    txtComplexion.setText("Grande");
                }
            }
            if((edad >= 45)&&(edad <= 54)){
                if (humero <= 6.0){
                    txtComplexion.setText("Chica");
                } else if ((humero > 6.0)&&(humero < 7.1)){
                    txtComplexion.setText("Mediana");
                } else {
                    txtComplexion.setText("Grande");
                }
            }
            if((edad >= 55)&&(edad <= 64)){
                if (humero <= 6.1){
                    txtComplexion.setText("Chica");
                } else if ((humero > 6.1)&&(humero < 7.2)){
                    txtComplexion.setText("Mediana");
                } else {
                    txtComplexion.setText("Grande");
                }
            }
            if(edad >= 65){
                if (humero <= 6.1){
                    txtComplexion.setText("Chica");
                } else if ((humero > 6.1)&&(humero < 7.0)){
                    txtComplexion.setText("Mediana");
                } else {
                    txtComplexion.setText("Grande");
                }
            }
        }
        
        txtComplexion.setEditable(false);        
    }//GEN-LAST:event_txtComplexionActionPerformed

    private void cbFemeninoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbFemeninoMouseClicked
        cbMasculino.setSelected(false);
        cbFemenino.setSelected(true);
    }//GEN-LAST:event_cbFemeninoMouseClicked

    private void cbMasculinoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbMasculinoMouseClicked
        cbFemenino.setSelected(false);
        cbMasculino.setSelected(true);
    }//GEN-LAST:event_cbMasculinoMouseClicked

    private void btnExportarWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarWordActionPerformed
        // Generar la exportación de los datos
        Paciente paciente = new Paciente();
        paciente.setAbdomen(txtAbdomen.getText());
        paciente.setAbdominal(txtAbdominal.getText());
        paciente.setActividadFisica(cmbActividadFisica.getModel().getSelectedItem().toString());
        paciente.setAxilar(txtAxilar.getText());
        paciente.setBiceps(txtBiceps.getText());
        paciente.setBrazoContraido(txtBrazoContraido.getText());
        paciente.setBrazoRelajado(txtBrazoRelajado.getText());
        paciente.setCadera(txtCadera.getText());
        paciente.setCc(txtCC.getText());
        paciente.setCintura(txtCintura.getText());
        paciente.setClasificacion(txtClasificacion.getText());
        paciente.setComplexion(txtComplexion.getText());
        paciente.setCrestaIliaca(txtCrestaIliaca.getText());
        paciente.setEctomorfia(txtEctomorfia.getText());
        paciente.setEctomorfiaRCD(txtEctomorfiaRCD.getText());
        paciente.setEdad(txtEdad.getText());
        paciente.setEndomorfia(txtEndomorfia.getText());
        paciente.setEndomorfiaRCD(txtEndomorfiaRCD.getText());
        paciente.setEstatura(txtEstatura.getText());
        paciente.setEstiloideo(txtEstiloideo.getText());
        paciente.setFemur(txtFemur.getText());
        paciente.setHumero(txtHumero.getText());
        paciente.setIcc(txtICC.getText());
        paciente.setImc(txtIMC.getText());
        paciente.setKgGrasa(txtKgGrasa.getText());
        paciente.setKgMusculo(txtKgMusculo.getText());
        paciente.setKgOseo(txtKgOseo.getText());
        paciente.setKgResidual(txtKgResidual.getText());
        paciente.setMasaMagra(txtMasaMagra.getText());
        paciente.setMesomorfia(txtMesomorfia.getText());
        paciente.setMesomorfiaRCD(txtMesomorfiaRCD.getText());
        paciente.setMusloFrontal(txtMusloFrontal.getText());
        paciente.setNombre(txtNombre.getText());
        paciente.setPantorrilla(txtPantorrilla.getText());
        paciente.setPantorrillaMedial(txtPantorrillaMedial.getText());
        paciente.setPectoral(txtPectoral.getText());
        paciente.setPeso(txtPeso.getText());
        paciente.setPorcentajeGrasaRCD(txtPorcentajeGrasaRCD.getText());
        paciente.setPorcentajeGrasaReal(txtPorcentajeGrasaReal.getText());
        paciente.setPorcentajeMusculoRCD(txtPorcentajeMusculoRCD.getText());
        paciente.setPorcentajeMusculoReal(txtPorcentajeMusculoReal.getText());
        paciente.setPorcentajeOseoRCD(txtPorcentajeOseoRCD.getText());
        paciente.setPorcentajeOseoReal(txtPorcentajeOseoReal.getText());
        paciente.setPorcentajeResidualRCD(txtPorcentajeResidualRCD.getText());
        paciente.setPorcentajeResidualReal(txtPorcentajeResidualReal.getText());
        paciente.setSexo(cbMasculino.isSelected());
        paciente.setSubescapular(txtSubescapular.getText());
        paciente.setSupraespinal(txtSupraespinal.getText());
        paciente.setTriceps(txtTriceps.getText());
        
        try {
            ExportToWord.exportation(paciente);
            JOptionPane.showMessageDialog(rootPane, "Exportación a Word completada, presione Aceptar para ver su archivo");
            Process p = Runtime.getRuntime().exec("explorer.exe C:\\Workspaces\\Kinansport\\" + paciente.getNombre());
            p.waitFor();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Error en la exportación: " + ex.getMessage());
            Logger.getLogger(Laboratorio.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnExportarWordActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Laboratorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Laboratorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Laboratorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Laboratorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Laboratorio dialog = new Laboratorio(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnDurninWomersley;
    private javax.swing.JButton btnExportarWord;
    private javax.swing.JToggleButton btnJacksonAndPollock;
    private javax.swing.JToggleButton btnJacksonPollock;
    private javax.swing.JToggleButton btnKatchMcArdle;
    private javax.swing.JToggleButton btnLewisHaskell;
    private javax.swing.JToggleButton btnPolloclkLaughridge;
    private javax.swing.JToggleButton btnSloan;
    private javax.swing.JToggleButton btnSloanBurtBlyth;
    private javax.swing.JToggleButton btnThorlandJohnson;
    private javax.swing.JToggleButton btnWilmoreBehnke;
    private javax.swing.JToggleButton btnWithersCraig;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbFemenino;
    private javax.swing.JCheckBox cbMasculino;
    private javax.swing.JComboBox cmbActividadFisica;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel panelComposicionCorporal;
    private javax.swing.JPanel panelDatosPersonales;
    private javax.swing.JPanel panelMediciones;
    private javax.swing.JTabbedPane tpDatosPersonales;
    private javax.swing.JTextField txtAbdomen;
    private javax.swing.JTextField txtAbdominal;
    private javax.swing.JTextField txtAxilar;
    private javax.swing.JTextField txtBiceps;
    private javax.swing.JTextField txtBrazoContraido;
    private javax.swing.JTextField txtBrazoRelajado;
    private javax.swing.JTextField txtCC;
    private javax.swing.JTextField txtCadera;
    private javax.swing.JTextField txtCintura;
    private javax.swing.JTextField txtClasificacion;
    private javax.swing.JTextField txtComplexion;
    private javax.swing.JTextField txtCrestaIliaca;
    private javax.swing.JTextField txtEctomorfia;
    private javax.swing.JTextField txtEctomorfiaRCD;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtEndomorfia;
    private javax.swing.JTextField txtEndomorfiaRCD;
    private javax.swing.JTextField txtEstatura;
    private javax.swing.JTextField txtEstiloideo;
    private javax.swing.JTextField txtFemur;
    private javax.swing.JTextField txtHumero;
    private javax.swing.JTextField txtICC;
    private javax.swing.JTextField txtIMC;
    private javax.swing.JTextField txtKgGrasa;
    private javax.swing.JTextField txtKgMusculo;
    private javax.swing.JTextField txtKgOseo;
    private javax.swing.JTextField txtKgResidual;
    private javax.swing.JTextField txtMasaMagra;
    private javax.swing.JTextField txtMesomorfia;
    private javax.swing.JTextField txtMesomorfiaRCD;
    private javax.swing.JTextField txtMusloFrontal;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPantorrilla;
    private javax.swing.JTextField txtPantorrillaMedial;
    private javax.swing.JTextField txtPectoral;
    private javax.swing.JTextField txtPeso;
    private javax.swing.JTextField txtPorcentajeGrasaRCD;
    private javax.swing.JTextField txtPorcentajeGrasaReal;
    private javax.swing.JTextField txtPorcentajeMusculoRCD;
    private javax.swing.JTextField txtPorcentajeMusculoReal;
    private javax.swing.JTextField txtPorcentajeOseoRCD;
    private javax.swing.JTextField txtPorcentajeOseoReal;
    private javax.swing.JTextField txtPorcentajeResidualRCD;
    private javax.swing.JTextField txtPorcentajeResidualReal;
    private javax.swing.JTextField txtSubescapular;
    private javax.swing.JTextField txtSupraespinal;
    private javax.swing.JTextField txtTriceps;
    // End of variables declaration//GEN-END:variables
}
